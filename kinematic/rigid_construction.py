import numpy as np


def effect(point_a, point_b):
    e = np.add(point_b, -point_a) / np.linalg.norm(point_a - point_b)
    # print(e)
    return np.array([e[0], e[1], e[2]])


def construction_matrix(g0, g1, g2, g3, p0, pz, p2, p3, pr):
    matrix = []
    e_g0p0 = effect(g0, p0)
    e_g1p0 = effect(g1, p0)
    e_g2p2 = effect(g2, p2)
    e_g3p3 = effect(g3, p3)
    e_p0p2 = effect(p0, p2)
    e_p0p3 = effect(p0, p3)
    e_p0pr = effect(p0, pr)
    e_p0pz = effect(p0, pz)
    e_pzp2 = effect(pz, p2)
    e_pzp3 = effect(pz, p3)
    e_p2p3 = effect(p2, p3)
    e_p2pr = effect(p2, pr)
    e_p3pr = effect(p3, pr)

    g0p0 = np.array([e_g0p0[0], e_g0p0[1], e_g0p0[2], 0, 0, 0, 0, 0, 0, 0, 0, 0, -e_g0p0[0], -e_g0p0[1], -e_g0p0[2], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    g1p0 = np.array([0, 0, 0, e_g1p0[0], e_g1p0[1], e_g1p0[2], 0, 0, 0, 0, 0, 0, -e_g1p0[0], -e_g1p0[1], -e_g1p0[2], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    g2p2 = np.array([0, 0, 0, 0, 0, 0, e_g2p2[0], e_g2p2[1], e_g2p2[2], 0, 0, 0, 0, 0, 0, 0, 0, 0, -e_g2p2[0], -e_g2p2[1], -e_g2p2[2], 0, 0, 0, 0, 0, 0])
    g3p3 = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, e_g3p3[0], e_g3p3[1], e_g3p3[2], 0, 0, 0, 0, 0, 0, 0, 0, 0, -e_g3p3[0], -e_g3p3[1], -e_g3p3[2], 0, 0, 0])
    p0p2 = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, e_p0p2[0], e_p0p2[1], e_p0p2[2], 0, 0, 0, -e_p0p2[0], -e_p0p2[1], -e_p0p2[2], 0, 0, 0, 0, 0, 0])
    p0p3 = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, e_p0p3[0], e_p0p3[1], e_p0p3[2], 0, 0, 0, 0, 0, 0, -e_p0p3[0], -e_p0p3[1], -e_p0p3[2], 0, 0, 0])
    p0pr = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, e_p0pr[0], e_p0pr[1], e_p0pr[2], 0, 0, 0, 0, 0, 0, 0, 0, 0, -e_p0pr[0], -e_p0pr[1], -e_p0pr[2]])
    p0pz = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, e_p0pz[0], e_p0pz[1], e_p0pz[2], -e_p0pz[0], -e_p0pz[1], -e_p0pz[2], 0, 0, 0, 0, 0, 0, 0, 0, 0])
    pzp2 = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, e_pzp2[0], e_pzp2[1], e_pzp2[2], -e_pzp2[0], -e_pzp2[1], -e_pzp2[2], 0, 0, 0, 0, 0, 0])
    pzp3 = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, e_pzp3[0], e_pzp3[1], e_pzp3[2], 0, 0, 0, -e_pzp3[0], -e_pzp3[1], -e_pzp3[2], 0, 0, 0])
    p2p3 = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, e_p2p3[0], e_p2p3[1], e_p2p3[2], -e_p2p3[0], -e_p2p3[1], -e_p2p3[2], 0, 0, 0])
    p2pr = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, e_p2pr[0], e_p2pr[1], e_p2pr[2], 0, 0, 0, -e_p2pr[0], -e_p2pr[1], -e_p2pr[2]])
    p3pr = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, e_p3pr[0], e_p3pr[1], e_p3pr[2], -e_p3pr[0], -e_p3pr[1], -e_p3pr[2]])
    g0x = np.array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    g0y = np.array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    g0z = np.array([0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    g1x = np.array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    g1y = np.array([0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    g1z = np.array([0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    g2x = np.array([0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    g2y = np.array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    g2z = np.array([0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    g3x = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    g3y = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    g3z = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
    rx = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0])
    ry = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0])

    matrix.append(g0p0)
    matrix.append(g1p0)
    matrix.append(g2p2)
    matrix.append(g3p3)
    matrix.append(p0p2)
    matrix.append(p0p3)
    matrix.append(p0pr)
    matrix.append(p0pz)
    matrix.append(pzp2)
    matrix.append(pzp3)
    matrix.append(p2p3)
    matrix.append(p2pr)
    matrix.append(p3pr)
    matrix.append(g0x)
    matrix.append(g0y)
    matrix.append(g0z)
    matrix.append(g1x)
    matrix.append(g1y)
    matrix.append(g1z)
    matrix.append(g2x)
    matrix.append(g2y)
    matrix.append(g2z)
    matrix.append(g3x)
    matrix.append(g3y)
    matrix.append(g3z)
    matrix.append(rx)
    matrix.append(ry)
    matrix = np.transpose(matrix)
    return matrix


a_g0 = np.array([0, 0.6, 0])
a_g1 = np.array([0, -0.6, 0])
a_g2 = np.array([1, 0.6, 0])
a_g3 = np.array([1, -0.6, 0])
a_p0 = np.array([0, 0, 1])
a_pz = np.array([0.5, 0, 0.9])
a_p2 = np.array([1, 0.5, 1])
a_p3 = np.array([1, -0.5, 1])
a_pr = np.array([0.9, 0, 1.3])
a_matrix = construction_matrix(a_g0, a_g1, a_g2, a_g3, a_p0, a_pz, a_p2, a_p3, a_pr)
gz = -250*9.81
f = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, gz, 0, 0, 0, 0, 0, 0, 0, 0, 0])
X = np.dot(np.linalg.inv(a_matrix), f)
print(X)

